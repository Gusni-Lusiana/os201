EDITING PROGRAM
Hal pertama yang perlu dilakukan adalah setting file konfigurasi bbfs, lakukan copy file pada config.h.in yang terdapat pada folder src dan edit menjadi config.h. Selanjutnya Define to 1 untuk semua fungsi #define pada konfigurasi config.h karena kita menggunakan semua fungsi tersebut pada bbfs.

 /* Define to 1 if your system has a working `chown' function. */
#define HAVE_CHOWN 1
/* Define to 1 if you have the <fcntl.h> header file. */
#define HAVE_FCNTL_H 1
/* Define to 1 if you have the `fdatasync' function. */
#define HAVE_FDATASYNC 1
/* Define to 1 if you have the `ftruncate' function. */
#define HAVE_FTRUNCATE 1
/* Define to 1 if you have the <inttypes.h> header file. */
#define HAVE_INTTYPES_H 1
/* Define to 1 if you have the <limits.h> header file. */
#define HAVE_LIMITS_H 1
/* Define to 1 if your system has a GNU libc compatible `malloc' function, and
   to 0 otherwise. */
#define HAVE_MALLOC 1
/* Define to 1 if you have the <memory.h> header file. */
#define HAVE_MEMORY_H 1
/* Define to 1 if you have the `mkdir' function. */
#define HAVE_MKDIR 1
/* Define to 1 if you have the `mkfifo' function. */
#define HAVE_MKFIFO 1
/* Define to 1 if you have the `realpath' function. */
#define HAVE_REALPATH 1
/* Define to 1 if you have the `rmdir' function. */
#define HAVE_RMDIR 1
/* Define to 1 if you have the <stdint.h> header file. */
#define HAVE_STDINT_H 1
/* Define to 1 if you have the <stdlib.h> header file. */
#define HAVE_STDLIB_H 1
/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1
/* Define to 1 if you have the <strings.h> header file. */
#define HAVE_STRINGS_H 1
/* Define to 1 if you have the <string.h> header file. */
#define HAVE_STRING_H 1
/* Define to 1 if `st_blksize' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1
/* Define to 1 if `st_blocks' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_BLOCKS 1
/* Define to 1 if `st_rdev' is a member of `struct stat'. */
#define HAVE_STRUCT_STAT_ST_RDEV 1
/* Define to 1 if your `struct stat' has `st_blocks'. Deprecated, use
   `HAVE_STRUCT_STAT_ST_BLOCKS' instead. */
#define HAVE_ST_BLOCKS 1
/* Define to 1 if you have the <sys/statvfs.h> header file. */
#define HAVE_SYS_STATVFS_H 1
/* Define to 1 if you have the <sys/stat.h> header file. */
#define HAVE_SYS_STAT_H 1
/* Define to 1 if you have the <sys/types.h> header file. */
#define HAVE_SYS_TYPES_H 1
/* Define to 1 if you have the <sys/xattr.h> header file. */
#define HAVE_SYS_XATTR_H 1
/* Define to 1 if you have the <unistd.h> header file. */
#define HAVE_UNISTD_H 1
/* Define to 1 if you have the `utime' function. */
#define HAVE_UTIME 1
/* Define to 1 if you have the <utime.h> header file. */
#define HAVE_UTIME_H 1
/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
   slash. */
#define LSTAT_FOLLOWS_SLASHED_SYMLINK 1

Setting file konfigurasi package pada config.h, sesuaikan dengan nama folder, versi, dan author.

/* Name of package */
#define PACKAGE "fuse-tutorial"
/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "joseph@pfeifferfamily.net"
/* Define to the full name of this package. */
#define PACKAGE_NAME "fuse-tutorial"
/* Define to the full name and version of this package. */
#define PACKAGE_STRING "fuse-tutorial 2018-02-04"
/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "fuse-tutorial"
/* Define to the home page for this package. */
#define PACKAGE_URL ""
/* Define to the version of this package. */
#define PACKAGE_VERSION "2018-02-04"
/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1
/* Version number of package */
#define VERSION "2018-02-04"

Hide beberapa fungsi yang tidak digunakan pada config.h, hal ini dilakukan karena kita menggunakan semua fungsi / define yang sebelumnya telah dibuat.

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed,the
   #define below would cause a syntax error. */
/* #undef _UINT64_T */
/* Define to `int' if <sys/types.h> doesn't define. */
/* #undef gid_t */
/* Define to rpl_malloc if the replacement function should be used. */
/* #undef malloc */
/* Define to `int' if <sys/types.h> does not define. */
/* #undef mode_t */
/* Define to `long int' if <sys/types.h> does not define. */
/* #undef off_t */
/* Define to `int' if <sys/types.h> does not define. */
/* #undef pid_t */
/* Define to `unsigned int' if <sys/types.h> does not define. */
/* #undef size_t */
/* Define to `int' if <sys/types.h> doesn't define. */
/* #undef uid_t */
/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
/* #undef uint64_t */

Selanjutnya buka file bbfs.c, kemudian lakukan searching character pada file bbfs.c sehingga didapat fungsi bb_read. Fungsi bb_read disini berguna untuk menampilkan operasi baca pada bbfs. Lakukan editing pada fungsi bb_read dan tambahkan:

if (retstat < 0)
	    retstat = log_error("bb_read read");
log_msg("\nZCZC READ ==== ==== \n%s\n%s\n",buf, "NNNN DONE ==== ====");

Dimana fungsi tersebut dibuat agar pada saat operasi baca bbfs dijalankan dan terdapat eror, maka akan menampilkan log message CZC READ ==== ==== \n%s\n%s\n",buf, "NNNN DONE ==== ====.

Berikut fungsi lengkapnya:

int bb_read(const char *path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi)
{
    int retstat = 0;
    log_msg("\nbb_read(path=\"%s\", buf=0x%08x, size=%d, offset=%lld, fi=0x%08x)\n",
    path, buf, size, offset, fi);
    // no need to get fpath on this one, since I work from fi->fh not the path
    log_fi(fi);
    retstat = pread(fi->fh, buf, size, offset);
    if (retstat < 0)
	    retstat = log_error("bb_read read");
    log_msg("\nZCZC READ ==== ==== \n%s\n%s\n",buf, "NNNN DONE ==== ====");
    return log_syscall("pread", pread(fi->fh, buf, size, offset), 0);
}

Selanjutnya buka file log.c, kemudian lakukan searching character pada file log.c sehingga didapat fungsi log_msg. Fungsi log_msg disini berguna untuk menampilkan / mencetak pesan log pada proses pada bbfs. Lakukan editing pada fungsi log_msg dan tambahkan:

Deklarasi variabel i dengan tipe data integer yang dimulai dari angka 0:
int i = 0;

Deklarasi isi fungsi dimana fungsi ini nantinya yang akan menampilkan urutan log yang dimulai dengan nomor baris. 

va_list ap;
    char str[10];
    sprintf(str, "%0.4d", i);
    fprintf(BB_DATA->logfile, str);
    va_start(ap, format);
    i++;
    vfprintf(BB_DATA->logfile, format, ap);

Berikut fungsi lengkapnya:

int i = 0;
void log_msg(const char *format, ...)
{
    va_list ap;
    char str[10];
    sprintf(str, "%0.4d", i);
    fprintf(BB_DATA->logfile, str);
    va_start(ap, format);
    i++;
    vfprintf(BB_DATA->logfile, format, ap);
}
